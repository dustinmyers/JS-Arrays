[1mdiff --git a/arraysPractice.js b/arraysPractice.js[m
[1mindex 7800b56..72307f6 100644[m
[1m--- a/arraysPractice.js[m
[1m+++ b/arraysPractice.js[m
[36m@@ -4,8 +4,9 @@[m
 var arr = [10,20,30];[m
 //Create a function named 'first' that is given 'arr' as the argument and  returns the first item the given array.[m
 [m
[31m-  //Code Here[m
[31m-[m
[32m+[m[32mvar first = function (arr) {[m
[32m+[m[32m  return arr[0];[m
[32m+[m[32m}[m
 [m
 //Next problem[m
 [m
[36m@@ -15,8 +16,9 @@[m [mvar arr = [40,50,60];[m
 //Create a function named 'last' that is given 'arr' as the argument and returns the last item the given array.[m
 [m
 [m
[31m-  //Code Here[m
[31m-[m
[32m+[m[32mvar last = function(arr) {[m
[32m+[m[32m  return arr[arr.length - 1];[m
[32m+[m[32m}[m
 [m
 //Next Problem[m
 [m
[36m@@ -24,8 +26,11 @@[m [mvar arr = [40,50,60];[m
 var family = ['Tyler', 'Jordyn', 'Ryan', 'Chelsey', 'Ireland'];[m
 //Create a function named 'looper' that is given family as it's only argument, loops through the given array, and alerts every item in the array.[m
 [m
[31m-  //Code Here[m
[31m-[m
[32m+[m[32mvar looper = function(family) {[m
[32m+[m[32m  for (var i = 0; i < family.length; i++) {[m
[32m+[m[32m    alert(family[i]);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
 [m
 //Next problem[m
 [m
[36m@@ -43,8 +48,14 @@[m [mvar letters = ['A', 'B', 'C', 'D', 'E'];[m
 var nums = [1,2,3,6,22,98,45,23,22,12];[m
 //Write a function named evenFinder that is given nums as it's only argument and removes all values that aren't even from the given array.[m
 [m
[31m-  //Code Here[m
[31m-[m
[32m+[m[32mvar evenFinder = function(nums) {[m
[32m+[m[32m  for (var i = 0; i < nums.length; i++) {[m
[32m+[m[32m    if (nums[i] % 2 !== 0) {[m[41m [m
[32m+[m[32m      nums.splice(i, 1);[m
[32m+[m[32m      i--;[m
[32m+[m[32m    }[m[41m [m
[32m+[m[32m  }[m[41m  [m
[32m+[m[32m}[m
 [m
 //Next problem[m
 [m
